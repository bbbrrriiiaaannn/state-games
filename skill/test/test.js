// This is a Javascript test harness that simulates the execution of Lambda function code
// From the command prompt, type "node test.js"
// const clientID = `amzn1.application-oa2-client.671e7adccc154c649ff7813f3daec9ce`;
// const clientSecret = `519cb9b873501ebdd5665fe30c4d3ac864f92710419fa22fe50e19a61c593c74`;

const apiAccessToken = `eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOiJodHRwczovL2FwaS5hbWF6b25hbGV4YS5jb20iLCJpc3MiOiJBbGV4YVNraWxsS2l0Iiwic3ViIjoiYW16bjEuYXNrLnNraWxsLjRkODA3YzU4LTBjNGItNGU1My04YTgyLTI1NjUyZDY0Y2UzNCIsImV4cCI6MTU1MDA4MTM3NCwiaWF0IjoxNTUwMDgxMDc0LCJuYmYiOjE1NTAwODEwNzQsInByaXZhdGVDbGFpbXMiOnsiY29uc2VudFRva2VuIjpudWxsLCJkZXZpY2VJZCI6ImFtem4xLmFzay5kZXZpY2UuQUc3S0NaU1I0VVpLNko0UUJFU1pWNDdSM0tXVkdLS0Q3NDVFWE9XNFM2WE1ITVZaSjNDWERNTFRBUEhGWlZOTUNEQTNEVExDQUVMNTNRNDZHT1dDRE5DQ0lXQU5JS0k1TURDUTJESzNVWDdXVFE1NEtaNzdOQ0FQWkZTR0dIWEJWNko1Q1ZPVlAzNk1UVVlNR0hQRkxDSU9UNjRRIiwidXNlcklkIjoiYW16bjEuYXNrLmFjY291bnQuQUg1NVVKV1U1WFFRV0NJVUpIRU1WVU01WUNZV05OUFpBS1dTWlQ1NFNOU1ozTUtUQUpSWklOQUtDNTZMWllaTFhERlNaR1hMTU9JTFpYRDJLNDRRS01GTEROU0NONEE1STVLRDdFMkxaUU1XUTZCNFREVE5DNDRUWVc3V0o1WFdRQ1BSWkVRWlpIRVpMVVNYVEdLWTVTN0RLUFZBQkpUT0haREREWDNIVkRYWkFRVjVaVkFUTFpZMlA3NFRIT0g2SUVNWFA1UUJRRzY1TFlJIn19.JqvM8RJXo2IPidGChGS26l9TrvMbxKCTdVrpbHQf12PEjDHNAu9kZNA3YKD0_WR1iubnr0HIW40GfXbiia-mTnHnfMOSYk95ZYFp7c-LK9VlYI8FFD7wtblod3CcRKUUr4VGBr8NA9x2c1UYr4YOaIhKcVZBy_x1bH-ZyojyE6BHa3O-Wj3HYTGMApCFaRmmPPXkZ68zpaNTJ-x14R-ZVGwvS9mQtJUTGwt8lLPpYGKY4aZ9LP7vsBVTNYBXwq6Ap5mGNwsCiqMeRQ1HVzfd2ln51tmSOBgtmKRrtNoqbQgkBlcnzBCoSSCnMYcniqQs3h_xyGHhJDCQKucr0uhVHA`;


console.log('\033[2J'); // clear console

const https = require('https');
const AWS = require('aws-sdk');
AWS.config.region = process.env.AWS_REGION || 'us-east-1';

const MyLambdaFunction = require('../lambda/custom/index.js'); // assumes single Lambda function with exports.handler

// call the function
MyLambdaFunction['handler'] (getTestEvent(), getContext(), callback);


// runTest();
//
//
// async function runTest() {
//     const token = await getToken();
//     console.log(`**** Token: ${token}`);
//
// }


// this is the Lambda request data, generated by the Alexa service.  Replace with your actual Alexa request.
function getTestEvent() {
    const testEvent =
        {
            "version": "1.0",
            "session": {
                "new": false,
                "sessionId": "amzn1.echo-api.session.eedf7811-5823-4548-a70d-4317c1816df3",
                "application": {
                    "applicationId": "amzn1.ask.skill.4d807c58-0c4b-4e53-8a82-25652d64ce34"
                },
                "attributes": {
                    "launchCount": 1,
                    "game": {},
                    "stateList": [],
                    "joinRank": 1,
                    "skillUserCount": 1,
                    "speakingSpeed": "fast",
                    "history": [
                        {
                            "IntentRequest": "LaunchRequest"
                        },
                        {
                            "IntentRequest": "ShoppingIntent"
                        }
                    ],
                    "gameState": "stopped",
                    "currentQuestion": null,
                    "lastUseTimestamp": 0
                },
                "user": {
                    "userId": "amzn1.ask.account.AH55UJWU5XQQWCIUJHEMVUM5YCYWNNPZAKWSZT54SNSZ3MKTAJRZINAKC56LZYZLXDFSZGXLMOILZXD2K44QKMFLDNSCN4A5I5KD7E2LZQMWQ6B4TDTNC44TYW7WJ5XWQCPRZEQZZHEZLUSXTGKY5S7DKPVABJTOHZDDDX3HVDXZAQV5ZVATLZY2P74THOH6IEMXP5QBQG65LYI"
                }
            },
            "context": {
                "System": {
                    "application": {
                        "applicationId": "amzn1.ask.skill.4d807c58-0c4b-4e53-8a82-25652d64ce34"
                    },
                    "user": {
                        "userId": "amzn1.ask.account.AH55UJWU5XQQWCIUJHEMVUM5YCYWNNPZAKWSZT54SNSZ3MKTAJRZINAKC56LZYZLXDFSZGXLMOILZXD2K44QKMFLDNSCN4A5I5KD7E2LZQMWQ6B4TDTNC44TYW7WJ5XWQCPRZEQZZHEZLUSXTGKY5S7DKPVABJTOHZDDDX3HVDXZAQV5ZVATLZY2P74THOH6IEMXP5QBQG65LYI"
                    },
                    "device": {
                        "deviceId": "amzn1.ask.device.AG7KCZSR4UZK6J4QBESZV47R3KWVGKKD745EXOW4S6XMHMVZJ3CXDMLTAPHFZVNMCDA3DTLCAEL53Q46GOWCDNCCIWANIKI5MDCQ2DK3UX7WTQ54KZ77NCAPZFSGGHXBV6J5CVOVP36MTUYMGHPFLCIOT64Q",
                        "supportedInterfaces": {}
                    },
                    "apiEndpoint": "https://api.amazonalexa.com",
                    "apiAccessToken": apiAccessToken
                },
                "Viewport": {
                    "experiences": [
                        {
                            "arcMinuteWidth": 246,
                            "arcMinuteHeight": 144,
                            "canRotate": false,
                            "canResize": false
                        }
                    ],
                    "shape": "RECTANGLE",
                    "pixelWidth": 1024,
                    "pixelHeight": 600,
                    "dpi": 160,
                    "currentPixelWidth": 1024,
                    "currentPixelHeight": 600,
                    "touch": [
                        "SINGLE"
                    ]
                }
            },
            "request": {
                "type": "IntentRequest",
                "requestId": "amzn1.echo-api.request.893cafbb-fe69-4053-83b4-f4f309b08d2a",
                "timestamp": "2019-02-13T17:51:21Z",
                "locale": "en-US",
                "intent": {
                    "name": "ProductDetailIntent",
                    "confirmationStatus": "NONE",
                    "slots": {
                        "productName": {
                            "name": "productName",
                            "value": "leader board",
                            "resolutions": {
                                "resolutionsPerAuthority": [
                                    {
                                        "authority": "amzn1.er-authority.echo-sdk.amzn1.ask.skill.4d807c58-0c4b-4e53-8a82-25652d64ce34.productNames",
                                        "status": {
                                            "code": "ER_SUCCESS_MATCH"
                                        },
                                        "values": [
                                            {
                                                "value": {
                                                    "name": "leader board",
                                                    "id": "1b718f3f963da3fe1a3f0f9f961adf89"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            },
                            "confirmationStatus": "NONE",
                            "source": "USER"
                        }
                    }
                }
            }
        };

    const LaunchRequestEvent =
        {
            "version": "1.0",
            "session": {
                "new": true,
                "sessionId": "amzn1.echo-api.session.5dc8f547-44bf-4f7b-bce6-e00e841fe9ff",
                "application": {
                    "applicationId": "amzn1.ask.skill.50ef6df2-ffb8-4692-8e18-c9b485cc03b0"
                },
                "user": {
                    "userId": "amzn1.ask.account.AG4BEMGBJIJYRAGKP5YLYGJDISRIQVPWOEABD3OQW66MTPOF4JRHLAEETH5TBIOT652I3KUYZSWA5MAZ55GUTIBLEMUQ4YQBPKXVG4YSFHLQL27UEC6YQDXTEYH5MD4NMK4M7UJ4FWTRPKTSII4R733EX3TVC3UKLKOBMHXXM5CHOX2TDUV2WPF6NCWF5KLJETNGQ5YC7EOUFLO"
                }
            },
            "context": {
                "AudioPlayer": {
                    "playerActivity": "IDLE"
                },
                "Display": {
                    "token": ""
                },
                "System": {
                    "application": {
                        "applicationId": "amzn1.ask.skill.50ef6df2-ffb8-4692-8e18-c9b485cc03b0"
                    },
                    "user": {
                        "userId": "amzn1.ask.account.AG4BEMGBJIJYRAGKP5YLYGJDISRIQVPWOEABD3OQW66MTPOF4JRHLAEETH5TBIOT652I3KUYZSWA5MAZ55GUTIBLEMUQ4YQBPKXVG4YSFHLQL27UEC6YQDXTEYH5MD4NMK4M7UJ4FWTRPKTSII4R733EX3TVC3UKLKOBMHXXM5CHOX2TDUV2WPF6NCWF5KLJETNGQ5YC7EOUFLO"
                    },
                    "device": {
                        "deviceId": "amzn1.ask.device.AFUWNBZ2FSMDFRJDWWA7GSZQBYX4DBS52RV7CHECNUTBCVMT6WW5SVO56SLUZ6D6TIJM5J2S6XNXKHAUU2RCXXQKUI75C37IOPVAA6HCVK5E5NV5EBVC5YUFAMIGD4FYZ4XFA4OEPDNCJYCHXN2RRGDQOZYQ",
                        "supportedInterfaces": {
                            "AudioPlayer": {},
                            "Display": {
                                "templateVersion": "1.0",
                                "markupVersion": "1.0"
                            }
                        }
                    },
                    "apiEndpoint": "https://api.amazonalexa.com",
                    "apiAccessToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOiJodHRwczovL2FwaS5hbWF6b25hbGV4YS5jb20iLCJpc3MiOiJBbGV4YVNraWxsS2l0Iiwic3ViIjoiYW16bjEuYXNrLnNraWxsLjRkODA3YzU4LTBjNGItNGU1My04YTgyLTI1NjUyZDY0Y2UzNCIsImV4cCI6MTU1MDA3NTY4MywiaWF0IjoxNTUwMDc1MzgzLCJuYmYiOjE1NTAwNzUzODMsInByaXZhdGVDbGFpbXMiOnsiY29uc2VudFRva2VuIjpudWxsLCJkZXZpY2VJZCI6ImFtem4xLmFzay5kZXZpY2UuQUc3S0NaU1I0VVpLNko0UUJFU1pWNDdSM0tXVkdLS0Q3NDVFWE9XNFM2WE1ITVZaSjNDWERNTFRBUEhGWlZOTUNEQTNEVExDQUVMNTNRNDZHT1dDRE5DQ0lXQU5JS0k1TURDUTJESzNVWDdXVFE1NEtaNzdOQ0FQWkZTR0dIWEJWNko1Q1ZPVlAzNk1UVVlNR0hQRkxDSU9UNjRRIiwidXNlcklkIjoiYW16bjEuYXNrLmFjY291bnQuQUg1NVVKV1U1WFFRV0NJVUpIRU1WVU01WUNZV05OUFpBS1dTWlQ1NFNOU1ozTUtUQUpSWklOQUtDNTZMWllaTFhERlNaR1hMTU9JTFpYRDJLNDRRS01GTEROU0NONEE1STVLRDdFMkxaUU1XUTZCNFREVE5DNDRUWVc3V0o1WFdRQ1BSWkVRWlpIRVpMVVNYVEdLWTVTN0RLUFZBQkpUT0haREREWDNIVkRYWkFRVjVaVkFUTFpZMlA3NFRIT0g2SUVNWFA1UUJRRzY1TFlJIn19.HLc-9gqiBaqAzXWkAkmpjadSQKt3n-D09AA4k2L1m-m3kXy2XFtKs-I6IZNhvvRAT2_VrRPPDvFs_CTAC7VcNO7ex8pE7tYoOVkCgLghqXez77CYDG0hcCCigT9V3ADPq2SV3GmPFMmiqBKYG_HRogJQ4dcpQ6ibGuzX-T2QKZDUM66Y6QxU_PFALZH8k0y_a-eFFZKUC5XY2Aq7Gom4UHxrrdw1lZtDQA682b27oCG7Uo8ReYKHgdM0qLAn-ar8ps06l8CDhiuelEuK-UCtnUWZD-XGQ6AGGNzu44e0_xpUoz9m8cmMJjMEttE9ZnB5XxjhNtgECocebiS2kZFbXg"
                }
            },
            "request": {
                "type": "LaunchRequest",
                "requestId": "amzn1.echo-api.request.867666fb-94f9-4ca7-aa08-2e886522e8ab",
                "timestamp": "2018-04-02T21:47:49Z",
                "locale": "en-US",
                "shouldLinkResultBeReturned": false
            }
        };
    return testEvent;
}

function getContext() {
    return {
        'succeed': function (data) {
            console.log(JSON.stringify(data, null,'\t') );
        },
        'fail': function (err) {
            console.log('context.fail occurred');
            console.log(JSON.stringify(err, null,'\t') );
        }
    };
}


function callback(error, data) {
    if(error) {
        console.log('error: ' + error);
    } else {
        // console.log('****** CALLYBACK');

        console.log(JSON.stringify(data, null, 2));
    }
}

function getTokenOptions(postLength){
    // const TokenPostData = getTokenPostData();
    return {
        hostname: 'api.amazon.com',
        port: 443,
        path: '/auth/O2/token',
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            'Content-Length': postLength // TokenPostData.length
        }
    }
}
function getTokenPostData() {

    return 'grant_type=client_credentials&client_id=' + clientID + '&client_secret=' + clientSecret + '&scope=alexa::all';
}
// const TokenPostData  = 'grant_type=client_credentials&client_id=amzn1.application-oa2-client.45690dc26b6848419d11e3c3e51c4c76&client_secret=5571d04619803b123fc305f0b2a8b3ac4f91504f512c2faed7165ca54356aaff&scope=alexa::proactive_events';

function getToken() {
    return new Promise(resolve => {
        const TokenPostData = getTokenPostData();
        const req = https.request(getTokenOptions(TokenPostData.length), (res) => {
            res.setEncoding('utf8');
            let returnData = '';

            res.on('data', (chunk) => { returnData += chunk; });

            res.on('end', () => {
                const tokenRequestId = res.headers['x-amzn-requestid'];
                // console.log(`Token requestId: ${tokenRequestId}`);
                resolve(JSON.parse(returnData).access_token);
            });
        });
        req.write(TokenPostData);
        req.end();

    });
}
